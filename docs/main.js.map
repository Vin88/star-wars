{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/index.ts","webpack:///./src/app/dashboard/stars.service.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingBaseModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DataTablesModule } from 'angular-datatables';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent, StarsService } from './dashboard';\nimport { AppRoutingBaseModule } from './app-routing.module';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    DataTablesModule,\n    AppRoutingBaseModule\n  ],\n  providers: [ StarsService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".child_row>td{\\n    padding: 0px !important;\\n}\\n\\n.child_row .accordian-body{\\n    padding: 10px;\\n}\"","module.exports = \"<div class=\\\"fixed-nav sticky-footer bg-dark\\\" id=\\\"page-top\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\" id=\\\"mainNav\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"index.html\\\">Start Bootstrap</a>\\n    <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\"\\n      aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n      <ul class=\\\"navbar-nav navbar-sidenav\\\" id=\\\"exampleAccordion\\\">\\n        <li class=\\\"nav-item\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"right\\\" title=\\\"Dashboard\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\"\\n          routerLinkActive=\\\"active\\\">\\n            <i class=\\\"fa fa-fw fa-dashboard\\\"></i>\\n            <span class=\\\"nav-link-text\\\">Dashboard</span>\\n          </a>\\n        </li>\\n\\n      </ul>\\n      <ul class=\\\"navbar-nav sidenav-toggler\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link text-center\\\" id=\\\"sidenavToggler\\\">\\n            <i class=\\\"fa fa-fw fa-angle-left\\\"></i>\\n          </a>\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </nav>\\n  <div class=\\\"content-wrapper\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <!-- Breadcrumbs-->\\n      <ol class=\\\"breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\">\\n          <a href=\\\"#\\\">Dashboard</a>\\n        </li>\\n        <li class=\\\"breadcrumb-item active\\\">My Dashboard</li>\\n      </ol>\\n      <!-- Icon Cards-->\\n    </div>\\n    <div class=\\\"container-fluid\\\">\\n      <!-- Example DataTables Card-->\\n      <div class=\\\"card mb-3\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-table\\\"></i>Star Wars</div>\\n        <div class=\\\"card-body\\\">\\n          \\n          <div class=\\\"row\\\" *ngIf=\\\"loader\\\">\\n            <div class=\\\"data_loader\\\">\\n                <img src=\\\"assets/loader.gif\\\" alt=\\\"Loading..\\\" >\\n            </div>\\n          </div>\\n          <div class=\\\"table-responsive\\\" *ngIf=\\\"!loader\\\">\\n            <p *ngIf=\\\"stars.length <= 0\\\">{{err}}</p>\\n            <table class=\\\"table table-striped\\\"  width=\\\"100%\\\" cellspacing=\\\"0\\\" *ngIf=\\\"stars.length > 0\\\">\\n              <thead>\\n                <tr>\\n                  <th>Name</th>\\n                  <th>Birth Year</th>\\n                  <th>Gender</th>\\n                  <th>Number of Films</th>\\n                  \\n                </tr>\\n              </thead>\\n              <tbody *ngFor=\\\"let star of stars; let i = index;\\\" >\\n                <tr data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#demo'+i\\\" class=\\\"accordion-toggle\\\">\\n                  <td>{{star.name}}</td>\\n                  <td>{{star.birth_year}}</td>\\n                  <td>{{star.gender}}</td>\\n                  <td>{{star.films.length}}</td>\\n\\n                </tr>\\n                <tr class=\\\"child_row\\\">\\n                  <td colspan=\\\"4\\\" class=\\\"hiddenRow\\\">\\n                    <div class=\\\"accordian-body collapse\\\" id=\\\"demo{{i}}\\\">\\n                        <h6>{{star.name}}</h6>\\n                        <div class=\\\"row\\\" >\\n                            <div class=\\\"col-md-4\\\">\\n                              <div class=\\\"row\\\"><div class=\\\"col-md-3\\\">Height</div><div class=\\\"col-md-5\\\">{{star.height}}</div></div>\\n                              <div class=\\\"row\\\"><div class=\\\"col-md-3\\\">Mass</div><div class=\\\"col-md-5\\\">{{star.mass}}</div></div>\\n                              <div class=\\\"row\\\"><div class=\\\"col-md-3\\\">Hair Color</div><div class=\\\"col-md-5\\\">{{star.height}}</div></div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                              <div class=\\\"row\\\"><div class=\\\"col-md-6\\\">Eye color</div><div class=\\\"col-md-6\\\">{{star.eye_color}}</div></div>\\n                              <div class=\\\"row\\\"><div class=\\\"col-md-6\\\">Home world</div><div class=\\\"col-md-6\\\">{{star.homeworld}}</div></div>\\n                            </div>\\n                          </div>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer small text-muted\\\">Updated yesterday at 11:59 PM</div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StarsService } from './stars.service';\nimport { Stars } from './stars';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  loader: boolean;\n  err: string;\n  stars: Array<Stars> = [];\n  constructor(private starsService: StarsService) {\n  }\n\n  /**\n   * Component initialization\n   */\n  ngOnInit() {\n    this.getStars();\n\n  }\n\n  /**\n   * Get list of stars\n   */\n  getStars() {\n    this.loader = true;\n    this.starsService.getStars().subscribe(\n      data => {\n        this.loader = false;\n        if (data.results) {\n          this.stars = data.results;\n        } else {\n          this.stars = [];\n          this.err = 'No data found';\n        }\n      },\n      err => {\n        this.loader = false;\n        this.err = err; // Custom  error message\n      }\n    );\n  }\n\n}\n","export { DashboardComponent } from './dashboard.component';\nexport { StarsService } from './stars.service';\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StarsService {\n\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Get list of stars\n   */\n  getStars(): Observable<any> {\n    return this.http.get(`${environment.api_url}people`)\n      .pipe(map(\n        (data) => {\n          return data;\n        }\n      ),\n      catchError((err) => {\n        return throwError('Error occured');\n      }\n    ));\n  }\n}\n","module.exports = \".error-container {\\n    text-align: center;\\n    height: 100%;\\n}\"","module.exports = \"<div class=\\\"error-container\\\">\\n    <h1>404</h1>\\n    <h2>Page Not Found</h2>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'https://swapi.co/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}